[{"C:\\Users\\User\\Desktop\\Ćwiczenie_4_229850\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Ćwiczenie_4_229850\\src\\App.js":"2"},{"size":198,"mtime":1654696758000,"results":"3","hashOfConfig":"4"},{"size":6447,"mtime":1655197849800,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4a8glf",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"C:\\Users\\User\\Desktop\\Ćwiczenie_4_229850\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\Ćwiczenie_4_229850\\src\\App.js",["13","14"],[],"import { useState, useEffect } from \"react\";\n\nimport { RadioSVGMap } from \"react-svg-map\";\nimport USA from \"@svg-maps/usa\";\nimport \"react-svg-map/lib/index.css\";\n\nimport \"./styles.css\";\nimport \"./input-range.css\";\n\nconst API_KEY = \"21a5a33ed3f049f9bbc131308221905\";\n\nconst colors = [\n  \"#7fb2f0\",\n  \"#89aee7\",\n  \"#92aadf\",\n  \"#9aa5d7\",\n  \"#a1a1ce\",\n  \"#a79dc6\",\n  \"#ad99be\",\n  \"#b294b5\",\n  \"#b690ad\",\n  \"#ba8ca5\",\n  \"#be879d\",\n  \"#c18395\",\n  \"#c47e8d\",\n  \"#c77a85\",\n  \"#ca757d\",\n  \"#cc7075\",\n  \"#ce6c6e\",\n  \"#d06766\",\n  \"#d1625e\",\n  \"#d35c57\",\n  \"#d4574f\",\n  \"#d55147\",\n  \"#d64b40\",\n  \"#d74538\",\n  \"#d73e30\",\n  \"#d83728\",\n  \"#d82f20\",\n  \"#d92517\",\n  \"#d9180c\",\n  \"#d90000\",\n];\n\nconst locations = [\n  {\n    name: \"Alaska\",\n    id: \"ak\",\n  },\n  {\n    name: \"Alabama\",\n    id: \"al\",\n  },\n  {\n    name: \"Arkansas\",\n    id: \"ar\",\n  },\n  {\n    name: \"Arizona\",\n    id: \"az\",\n  },\n  {\n    name: \"California\",\n    id: \"ca\",\n  },\n  {\n    name: \"Colorado\",\n    id: \"co\",\n  },\n  {\n    name: \"Connecticut\",\n    id: \"ct\",\n  },\n  {\n    name: \"Washington, DC\",\n    id: \"dc\",\n  },\n  {\n    name: \"Delaware\",\n    id: \"de\",\n  },\n  {\n    name: \"Florida\",\n    id: \"fl\",\n  },\n  {\n    name: \"Georgia\",\n    id: \"ga\",\n  },\n  {\n    name: \"Hawaii\",\n    id: \"hi\",\n  },\n  {\n    name: \"Iowa\",\n    id: \"ia\",\n  },\n  {\n    name: \"Idaho\",\n    id: \"id\",\n  },\n  {\n    name: \"Illinois\",\n    id: \"il\",\n  },\n  {\n    name: \"Indiana\",\n    id: \"in\",\n  },\n  {\n    name: \"Kansas\",\n    id: \"ks\",\n  },\n  {\n    name: \"Kentucky\",\n    id: \"ky\",\n  },\n  {\n    name: \"Louisiana\",\n    id: \"la\",\n  },\n  {\n    name: \"Massachusetts\",\n    id: \"ma\",\n  },\n  {\n    name: \"Maryland\",\n    id: \"md\",\n  },\n  {\n    name: \"Maine\",\n    id: \"me\",\n  },\n  {\n    name: \"Michigan\",\n    id: \"mi\",\n  },\n  {\n    name: \"Minnesota\",\n    id: \"mn\",\n  },\n  {\n    name: \"Missouri\",\n    id: \"mo\",\n  },\n  {\n    name: \"Mississippi\",\n    id: \"ms\",\n  },\n  {\n    name: \"Montana\",\n    id: \"mt\",\n  },\n  {\n    name: \"North Carolina\",\n    id: \"nc\",\n  },\n  {\n    name: \"North Dakota\",\n    id: \"nd\",\n  },\n  {\n    name: \"Nebraska\",\n    id: \"ne\",\n  },\n  {\n    name: \"New Hampshire\",\n    id: \"nh\",\n  },\n  {\n    name: \"New Jersey\",\n    id: \"nj\",\n  },\n  {\n    name: \"New Mexico\",\n    id: \"nm\",\n  },\n  {\n    name: \"Nevada\",\n    id: \"nv\",\n  },\n  {\n    name: \"New York\",\n    id: \"ny\",\n  },\n  {\n    name: \"Ohio\",\n    id: \"oh\",\n  },\n  {\n    name: \"Oklahoma\",\n    id: \"ok\",\n  },\n  {\n    name: \"Oregon\",\n    id: \"or\",\n  },\n  {\n    name: \"Pennsylvania\",\n    id: \"pa\",\n  },\n  {\n    name: \"Rhode Island\",\n    id: \"ri\",\n  },\n  {\n    name: \"South Carolina\",\n    id: \"sc\",\n  },\n  {\n    name: \"South Dakota\",\n    id: \"sd\",\n  },\n  {\n    name: \"Tennessee\",\n    id: \"tn\",\n  },\n  {\n    name: \"Texas\",\n    id: \"tx\",\n  },\n  {\n    name: \"Utah\",\n    id: \"ut\",\n  },\n  {\n    name: \"Virginia\",\n    id: \"va\",\n  },\n  {\n    name: \"Vermont\",\n    id: \"vt\",\n  },\n  {\n    name: \"Washington\",\n    id: \"wa\",\n  },\n  {\n    name: \"Wisconsin\",\n    id: \"wi\",\n  },\n  {\n    name: \"West Virginia\",\n    id: \"wv\",\n  },\n  {\n    name: \"Wyoming\",\n    id: \"wy\",\n  },\n];\n\nconst App = () => {\n  const [selectedLocation, setSelectedLocation] = useState(\"Alaska\");\n  const [selectedHour, setSelectedHour] = useState(12);\n  const [temperature, setTemperature] = useState(\"\");\n  const [pressure, setPressure] = useState(\"\");\n\n  const date = new Date();\n\n  let elements;\n  if (!elements) {\n    elements = document.querySelector(\":root\");\n  }\n\n  const getAllWeatherAndColor = async () => {\n    for (let state of locations) {\n      console.log(state);\n\n      const apiCall = await fetch(\n        `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${state.name}&days=1&aqi=no&alerts=no`\n      );\n\n      const response = await apiCall.json();\n\n      const temperature =\n        response.forecast.forecastday[0].hour[selectedHour].temp_c;\n\n      colorState(temperature, state);\n    }\n  };\n\n  function colorState(temperature, state) {\n    let color;\n    if (temperature <= 10) color = colors[0];\n    else if (temperature >= 29) color = colors[29];\n    else color = colors[Number(temperature).toFixed(0)];\n\n    let element = document.getElementById(state.id);\n    element.style.fill = color;\n  }\n\n  function color_coding() {\n    let color;\n    if (temperature <= 10) color = colors[0];\n    else if (temperature >= 29) color = colors[29];\n    else color = colors[Number(temperature).toFixed(0)];\n    console.log(Number(temperature).toFixed(0));\n    elements.style.setProperty(\"--fill\", color);\n  }\n\n  const getWeather = async () => {\n    const apiCall = await fetch(\n      `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${selectedLocation}&days=1&aqi=no&alerts=no`\n    );\n\n    const response = await apiCall.json();\n\n    const temperature =\n      response.forecast.forecastday[0].hour[selectedHour].temp_c;\n\n    const pressure =\n      response.forecast.forecastday[0].hour[selectedHour].pressure_mb;\n\n    setTemperature(temperature);\n    setPressure(pressure);\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, [selectedHour, selectedLocation]);\n\n  useEffect(() => {\n    color_coding();\n    getAllWeatherAndColor();\n  }, [temperature]);\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"map-container\">\n        <RadioSVGMap\n          map={USA}\n          className=\"map\"\n          onChange={(event) => {\n            const stateName = Object.entries(event)[1][1].name;\n            setSelectedLocation(stateName);\n          }}\n        />\n      </div>\n      <div className=\"right-container\">\n        <div className=\"inner-right-container\">\n          <h1>Selected State: {selectedLocation}</h1>\n          <div className=\"range-input-container\">\n            <label htmlFor=\"input\">\n              {date.toLocaleDateString()} |{\" \"}\n              <strong>{selectedHour + \":00\"}</strong>\n            </label>\n            <input\n              id=\"input\"\n              type=\"range\"\n              className=\"range-input\"\n              value={selectedHour}\n              min=\"0\"\n              max=\"23\"\n              step=\"1\"\n              onChange={(e) => {\n                setSelectedHour(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"data-container\">\n            <p>\n              Temperature [°C]: <strong>{temperature}</strong>\n            </p>\n            <p>\n              Pressure [hPa]: <strong>{pressure}</strong>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n",{"ruleId":"15","severity":1,"message":"16","line":320,"column":6,"nodeType":"17","endLine":320,"endColumn":38,"suggestions":"18"},{"ruleId":"15","severity":1,"message":"19","line":325,"column":6,"nodeType":"17","endLine":325,"endColumn":19,"suggestions":"20"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["21"],"React Hook useEffect has missing dependencies: 'color_coding' and 'getAllWeatherAndColor'. Either include them or remove the dependency array.",["22"],{"desc":"23","fix":"24"},{"desc":"25","fix":"26"},"Update the dependencies array to be: [getWeather, selectedHour, selectedLocation]",{"range":"27","text":"28"},"Update the dependencies array to be: [color_coding, getAllWeatherAndColor, temperature]",{"range":"29","text":"30"},[4975,5007],"[getWeather, selectedHour, selectedLocation]",[5085,5098],"[color_coding, getAllWeatherAndColor, temperature]"]